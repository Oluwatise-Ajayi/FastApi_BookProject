name: CI Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.13.2"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest

  deploy:
    runs-on: windows-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: List files in workspace
        shell: pwsh
        run: Get-ChildItem -Path . -Recurse

      - name: Install PowerShell Core
        run: pwsh -c "Write-Output 'Using PowerShell Core'"

      - name: Run deployment script
        shell: pwsh
        working-directory: .github
        run: ./deploy_script.ps1

      - name: Download Nginx
        run: Invoke-WebRequest -Uri "https://nginx.org/download/nginx-1.25.3.zip" -OutFile "nginx.zip"

      - name: Extract Nginx
        run: Expand-Archive -Path nginx.zip -DestinationPath C:\nginx -Force

      - name: Ensure Nginx Extracted Correctly
        shell: pwsh
        run: |
          if (Test-Path -Path "C:\nginx\nginx-1.25.3\") {
            Write-Output "‚úÖ Nginx extracted successfully."
          } else {
            Write-Error "‚ùå Nginx extraction failed."
          }

      - name: Check Nginx Version
        run: C:\nginx\nginx-1.25.3\nginx.exe -v

      - name: Ensure Nginx Directories Exist
        shell: pwsh
        run: |
          $nginxDir = "C:\nginx\nginx-1.25.3"
          
          # Ensure logs directory exists
          if (!(Test-Path -Path "$nginxDir\logs")) {
            Write-Output "‚ö†Ô∏è logs directory missing. Creating..."
            New-Item -ItemType Directory -Path "$nginxDir\logs" -Force
          }

          # Ensure conf directory exists
          if (!(Test-Path -Path "$nginxDir\conf")) {
            Write-Output "‚ö†Ô∏è conf directory missing. Creating..."
            New-Item -ItemType Directory -Path "$nginxDir\conf" -Force
          }

      - name: Fix Missing Log & PID Files
        shell: pwsh
        run: |
          $nginxDir = "C:\nginx\nginx-1.25.3"

          # Ensure error log file exists
          if (!(Test-Path -Path "$nginxDir\logs\error.log")) {
            Write-Output "‚ö†Ô∏è error.log missing. Creating..."
            New-Item -ItemType File -Path "$nginxDir\logs\error.log" -Force | Out-Null
          }

          # Ensure nginx.pid file exists
          if (!(Test-Path -Path "$nginxDir\logs\nginx.pid")) {
            Write-Output "‚ö†Ô∏è nginx.pid missing. Creating..."
            New-Item -ItemType File -Path "$nginxDir\logs\nginx.pid" -Force | Out-Null
          }

      - name: Debug Nginx Config Path
        shell: pwsh
        run: |
          $nginxDir = "C:\nginx\nginx-1.25.3"
          if (Test-Path -Path "$nginxDir\conf\nginx.conf") {
            Write-Output "‚úÖ nginx.conf file exists."
          } else {
            Write-Warning "‚ö†Ô∏è nginx.conf file NOT found! Creating a default configuration."
            echo "pid C:/nginx/nginx-1.25.3/logs/nginx.pid;
                  error_log C:/nginx/nginx-1.25.3/logs/error.log;
                  events { worker_connections 1024; }
                  http {
                    server {
                      listen 80;
                      server_name localhost;
                      location / { root html; index index.html; }
                    }
                  }" | Out-File -FilePath "$nginxDir\conf\nginx.conf"
          }

      - name: Update Nginx Configuration & Reload
        shell: pwsh
        run: |
          $nginxDir = "C:\nginx\nginx-1.25.3"
          Write-Output "üîÑ Backing up old configuration..."
          Copy-Item -Path "$nginxDir\conf\nginx.conf" -Destination "$nginxDir\conf\nginx.conf.bak" -Force
          
          Start-Sleep -s 2
          
          Write-Output "‚ôªÔ∏è Reloading Nginx..."
          & "$nginxDir\nginx.exe" -c "$nginxDir\conf\nginx.conf" -s reload
